{"version":3,"file":"tag.modern.js","sources":["../lib/tag.ts"],"sourcesContent":["type ElementOrList = HTMLElement | HTMLElement[];\r\ntype ElementOrString = HTMLElement | string;\r\ntype ElementOrListOrText = ElementOrList | string;\r\n\r\nconst tag = (tagName: string, style: string = '', children?: ElementOrListOrText) => {\r\n    const el = document.createElement(tagName);\r\n    style?.includes(':') ? el.setAttribute('style', style) : el.className = style;\r\n    el.append(...[children].flat()\r\n        .filter(x => x != null));\r\n    return el;\r\n}\r\n\r\n//@ts-ignore \"event\" is depricated in lib.d.ts in typescript. \r\nconst event = (eventName: string, callback: EventListener | EventListenerObject, children: ElementOrListOrText): ElementOrString[] => {\r\n    const c = [children].flat();\r\n    c\r\n        .filter((e: ElementOrString) => e instanceof HTMLElement)\r\n        .forEach((e: HTMLElement) =>\r\n            e.addEventListener(eventName, callback));\r\n    return c;\r\n}\r\n\r\nexport { tag, event };\r\n"],"names":["tag","tagName","style","children","el","document","createElement","includes","setAttribute","className","append","flat","filter","x","event","eventName","callback","c","e","HTMLElement","forEach","addEventListener"],"mappings":"AAIMA,MAAAA,EAAM,CAACC,EAAiBC,EAAgB,GAAIC,KAC9C,MAAMC,EAAKC,SAASC,cAAcL,GAIlC,aAHAC,SAAAA,EAAOK,SAAS,MAAOH,EAAGI,aAAa,QAASN,GAASE,EAAGK,UAAYP,EACxEE,EAAGM,UAAU,CAACP,GAAUQ,OACnBC,OAAOC,GAAU,MAALA,IACVT,GAILU,EAAQ,CAACC,EAAmBC,EAA+Cb,KAC7E,MAAMc,EAAI,CAACd,GAAUQ,OAKrB,OAJAM,EACKL,OAAQM,GAAuBA,aAAaC,aAC5CC,QAASF,GACNA,EAAEG,iBAAiBN,EAAWC,IAC/BC"}