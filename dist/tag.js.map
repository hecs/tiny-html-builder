{"version":3,"file":"tag.js","sources":["../lib/tag.ts"],"sourcesContent":["type ElementOrList = HTMLElement | HTMLElement[];\r\ntype ElementOrString = HTMLElement | string;\r\ntype ElementOrListOrText = ElementOrList | string;\r\n\r\nconst tag = (tagName: string, style: string = '', children?: ElementOrListOrText) => {\r\n    const el = document.createElement(tagName);\r\n    style?.includes(':') ? el.setAttribute('style', style) : el.className = style;\r\n    el.append(...[children].flat()\r\n        .filter(x => x != null));\r\n    return el;\r\n}\r\n\r\n//@ts-ignore \"event\" is depricated in lib.d.ts in typescript. \r\nconst event = (eventName: string, callback: EventListener | EventListenerObject, children: ElementOrListOrText): ElementOrString[] => {\r\n    const c = [children].flat();\r\n    c\r\n        .filter((e: ElementOrString) => e instanceof HTMLElement)\r\n        .forEach((e: HTMLElement) =>\r\n            e.addEventListener(eventName, callback));\r\n    return c;\r\n}\r\n\r\nexport { tag, event };\r\n"],"names":["eventName","callback","children","c","flat","filter","e","HTMLElement","forEach","addEventListener","tagName","style","el","document","createElement","includes","setAttribute","className","append","x"],"mappings":"cAac,SAACA,EAAmBC,EAA+CC,GAC7E,IAAMC,EAAI,CAACD,GAAUE,OAKrB,OAJAD,EACKE,OAAO,SAACC,UAAuBA,aAAaC,cAC5CC,QAAQ,SAACF,UACNA,EAAEG,iBAAiBT,EAAWC,KAC/BE,eAfC,SAACO,EAAiBC,EAAoBT,kBAApBS,IAAAA,EAAgB,IAC1C,IAAMC,EAAKC,SAASC,cAAcJ,GAIlC,gBAHAC,YAAOI,SAAS,MAAOH,EAAGI,aAAa,QAASL,GAASC,EAAGK,UAAYN,EACxEC,EAAGM,aAAHN,EAAa,CAACV,GAAUE,OACnBC,OAAO,SAAAc,UAAU,MAALA,KACVP"}